name: Deploy Agent Builder to Azure

on:
  push:
    branches: [ main, master, DemoSignUp, AgentBuilder ]
  pull_request:
    branches: [ main, master, DemoSignUp, AgentBuilder ]
  workflow_dispatch:

env:
  AZURE_RESOURCE_GROUP: rg-agentbuilder-dev
  AZURE_LOCATION: eastus
  ENVIRONMENT_NAME: dev

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          agentbuilder-frontend/package-lock.json
          agentbuilder-backend/package-lock.json
    
    - name: Build Frontend
      run: |
        cd agentbuilder-frontend
        npm ci
        npm run build
    
    - name: Build Backend
      run: |
        cd agentbuilder-backend
        npm ci
    
    - name: Upload Frontend Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: agentbuilder-frontend/build/
    
    - name: Upload Backend Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: agentbuilder-backend/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/DemoSignUp' || github.ref == 'refs/heads/AgentBuilder'
    
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download Frontend Artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: ./frontend-build
    
    - name: Download Backend Artifacts
      uses: actions/download-artifact@v4
      with:
        name: backend-build
        path: ./backend-build
    
    - name: Azure Login using OIDC
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        auth-type: OIDC
    
    - name: Deploy Infrastructure
      run: |
        # Deploy Bicep infrastructure
        az deployment sub create \
          --location ${{ env.AZURE_LOCATION }} \
          --template-file infra/main.bicep \
          --parameters infra/main.parameters.json \
          --parameters environmentName=${{ env.ENVIRONMENT_NAME }} \
          --parameters location=${{ env.AZURE_LOCATION }} \
          --parameters resourceGroupName=${{ env.AZURE_RESOURCE_GROUP }} \
          --parameters dataverseClientId="${{ secrets.DATAVERSE_CLIENT_ID }}" \
          --parameters dataverseClientSecret="${{ secrets.DATAVERSE_CLIENT_SECRET }}" \
          --parameters dataverseTenantId="${{ secrets.DATAVERSE_TENANT_ID }}" \
          --parameters dataverseResource="${{ secrets.DATAVERSE_RESOURCE }}" \
          --name "agentbuilder-${{ env.ENVIRONMENT_NAME }}-${{ github.run_number }}" \
          --confirm-with-what-if
    
    - name: Deploy Frontend to Static Web App
      run: |
        # Get Static Web App deployment token
        staticWebAppName=$(az staticwebapp list --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --query "[0].name" -o tsv)
        deploymentToken=$(az staticwebapp secrets list --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name $staticWebAppName --query "properties.apiKey" -o tsv)
        
        # Install SWA CLI and deploy
        npm install -g @azure/static-web-apps-cli
        swa deploy ./frontend-build --deployment-token $deploymentToken
    
    - name: Deploy Backend to Function App
      uses: Azure/functions-action@v1
      with:
        app-name: func-agentbuilder-${{ env.ENVIRONMENT_NAME }}
        package: ./backend-build
